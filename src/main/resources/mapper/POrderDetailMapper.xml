<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.commune.paris.mapper.POrderDetailMapper">
  <resultMap id="BaseResultMap" type="com.commune.paris.entity.POrderDetail">
    <result column="p_order_detail_order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="p_order_detail_cate_id" jdbcType="INTEGER" property="cateId" />
    <result column="p_order_detail_goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="p_order_detail_goods_count" jdbcType="INTEGER" property="goodsCount" />
    <result column="p_order_detail_pay_price" jdbcType="DOUBLE" property="payPrice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    p_order_detail.order_id as p_order_detail_order_id, p_order_detail.cate_id as p_order_detail_cate_id, 
    p_order_detail.goods_id as p_order_detail_goods_id, p_order_detail.goods_count as p_order_detail_goods_count, 
    p_order_detail.pay_price as p_order_detail_pay_price
  </sql>
  <select id="selectByExample" parameterType="com.commune.paris.entity.POrderDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from p_order_detail p_order_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.commune.paris.entity.POrderDetailExample">
    delete from p_order_detail p_order_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.commune.paris.entity.POrderDetail" useGeneratedKeys="true" keyProperty="id">
    insert into p_order_detail (order_id, cate_id, goods_id, 
      goods_count, pay_price)
    values (#{orderId,jdbcType=VARCHAR}, #{cateId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, 
      #{goodsCount,jdbcType=INTEGER}, #{payPrice,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.commune.paris.entity.POrderDetail" useGeneratedKeys="true" keyProperty="id">
    insert into p_order_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="cateId != null">
        cate_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="goodsCount != null">
        goods_count,
      </if>
      <if test="payPrice != null">
        pay_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="cateId != null">
        #{cateId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsCount != null">
        #{goodsCount,jdbcType=INTEGER},
      </if>
      <if test="payPrice != null">
        #{payPrice,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.commune.paris.entity.POrderDetailExample" resultType="java.lang.Long">
    select count(*) from p_order_detail p_order_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update p_order_detail p_order_detail
    <set>
      <if test="record.orderId != null">
        p_order_detail.order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.cateId != null">
        p_order_detail.cate_id = #{record.cateId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        p_order_detail.goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsCount != null">
        p_order_detail.goods_count = #{record.goodsCount,jdbcType=INTEGER},
      </if>
      <if test="record.payPrice != null">
        p_order_detail.pay_price = #{record.payPrice,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update p_order_detail p_order_detail
    set p_order_detail.order_id = #{record.orderId,jdbcType=VARCHAR},
      p_order_detail.cate_id = #{record.cateId,jdbcType=INTEGER},
      p_order_detail.goods_id = #{record.goodsId,jdbcType=INTEGER},
      p_order_detail.goods_count = #{record.goodsCount,jdbcType=INTEGER},
      p_order_detail.pay_price = #{record.payPrice,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <delete id="deleteByOrderId" parameterType="java.lang.String" >
    delete from p_order_detail
    where order_id = #{orderId,jdbcType=VARCHAR}
  </delete>
  <select id="countGoodsAll" parameterType="map" resultType="int" >
    select count(1)
    from p_order_detail
    <if test="goodsId != null">
      where goods_id =#{goodsId}
    </if>
  </select>
</mapper>