<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.commune.paris.mapper.PGoodsMapper">
  <resultMap id="BaseResultMap" type="com.commune.paris.entity.PGoods">
    <id column="p_goods_id" jdbcType="INTEGER" property="id" />
    <result column="p_goods_cate_id" jdbcType="INTEGER" property="cateId" />
    <result column="p_goods_name" jdbcType="VARCHAR" property="name" />
    <result column="p_goods_description" jdbcType="VARCHAR" property="description" />
    <result column="p_goods_big_img" jdbcType="VARCHAR" property="bigImg" />
    <result column="p_goods_small_img" jdbcType="VARCHAR" property="smallImg" />
    <result column="p_goods_introduce" jdbcType="VARCHAR" property="introduce" />
    <result column="p_goods_state" jdbcType="INTEGER" property="state" />
    <result column="p_goods_price" jdbcType="DOUBLE" property="price" />
    <result column="p_goods_stock" jdbcType="INTEGER" property="stock" />
    <result column="p_goods_create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    p_goods.id as p_goods_id, p_goods.cate_id as p_goods_cate_id, p_goods.`name` as `p_goods_name`, 
    p_goods.description as p_goods_description, p_goods.big_img as p_goods_big_img, p_goods.small_img as p_goods_small_img, 
    p_goods.introduce as p_goods_introduce, p_goods.`state` as `p_goods_state`, p_goods.price as p_goods_price, 
    p_goods.stock as p_goods_stock, p_goods.create_time as p_goods_create_time
  </sql>
  <select id="selectByExample" parameterType="com.commune.paris.entity.PGoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from p_goods p_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from p_goods p_goods
    where p_goods.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from p_goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.commune.paris.entity.PGoodsExample">
    delete from p_goods p_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.commune.paris.entity.PGoods" useGeneratedKeys="true" keyProperty="id">
    insert into p_goods (id, cate_id, `name`, 
      description, big_img, small_img, 
      introduce, `state`, price, 
      stock, create_time)
    values (#{id,jdbcType=INTEGER}, #{cateId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{bigImg,jdbcType=VARCHAR}, #{smallImg,jdbcType=VARCHAR}, 
      #{introduce,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE}, 
      #{stock,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.commune.paris.entity.PGoods" useGeneratedKeys="true" keyProperty="id">
    insert into p_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="cateId != null">
        cate_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="bigImg != null">
        big_img,
      </if>
      <if test="smallImg != null">
        small_img,
      </if>
      <if test="introduce != null">
        introduce,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cateId != null">
        #{cateId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="bigImg != null">
        #{bigImg,jdbcType=VARCHAR},
      </if>
      <if test="smallImg != null">
        #{smallImg,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.commune.paris.entity.PGoodsExample" resultType="java.lang.Long">
    select count(*) from p_goods p_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update p_goods p_goods
    <set>
      <if test="record.id != null">
        p_goods.id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cateId != null">
        p_goods.cate_id = #{record.cateId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        p_goods.`name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        p_goods.description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.bigImg != null">
        p_goods.big_img = #{record.bigImg,jdbcType=VARCHAR},
      </if>
      <if test="record.smallImg != null">
        p_goods.small_img = #{record.smallImg,jdbcType=VARCHAR},
      </if>
      <if test="record.introduce != null">
        p_goods.introduce = #{record.introduce,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        p_goods.`state` = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        p_goods.price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.stock != null">
        p_goods.stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        p_goods.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update p_goods p_goods
    set p_goods.id = #{record.id,jdbcType=INTEGER},
      p_goods.cate_id = #{record.cateId,jdbcType=INTEGER},
      p_goods.`name` = #{record.name,jdbcType=VARCHAR},
      p_goods.description = #{record.description,jdbcType=VARCHAR},
      p_goods.big_img = #{record.bigImg,jdbcType=VARCHAR},
      p_goods.small_img = #{record.smallImg,jdbcType=VARCHAR},
      p_goods.introduce = #{record.introduce,jdbcType=VARCHAR},
      p_goods.`state` = #{record.state,jdbcType=INTEGER},
      p_goods.price = #{record.price,jdbcType=DOUBLE},
      p_goods.stock = #{record.stock,jdbcType=INTEGER},
      p_goods.create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.commune.paris.entity.PGoods">
    update p_goods
    <set>
      <if test="cateId != null">
        cate_id = #{cateId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="bigImg != null">
        big_img = #{bigImg,jdbcType=VARCHAR},
      </if>
      <if test="smallImg != null">
        small_img = #{smallImg,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null">
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.commune.paris.entity.PGoods">
    update p_goods
    set cate_id = #{cateId,jdbcType=INTEGER},
      `name` = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      big_img = #{bigImg,jdbcType=VARCHAR},
      small_img = #{smallImg,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR},
      `state` = #{state,jdbcType=INTEGER},
      price = #{price,jdbcType=DOUBLE},
      stock = #{stock,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="countAll" parameterType="map" resultType="int" >
    select count(1)
    from p_goods p_goods
    <if test="name != null">
      where name like "%"#{name}"%"
    </if>
  </select>
  <select id="getGoodsByPage" parameterType="map" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from p_goods p_goods
    <if test="name != null">
      where name like "%"#{name}"%"
    </if>
    limit #{page.offset},#{page.pageSize}
  </select>
</mapper>