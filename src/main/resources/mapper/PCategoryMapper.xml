<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.commune.paris.mapper.PCategoryMapper">
  <resultMap id="BaseResultMap" type="com.commune.paris.entity.PCategory">
    <id column="p_category_id" jdbcType="INTEGER" property="id" />
    <result column="p_category_parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="p_category_name" jdbcType="VARCHAR" property="name" />
    <result column="p_category_status" jdbcType="INTEGER" property="status" />
    <result column="p_category_description" jdbcType="VARCHAR" property="description" />
    <result column="p_category_sort" jdbcType="INTEGER" property="sort" />
    <result column="p_category_level" jdbcType="INTEGER" property="level" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    p_category.id as p_category_id, p_category.parent_id as p_category_parent_id, p_category.`name` as `p_category_name`, 
    p_category.`status` as `p_category_status`, p_category.description as p_category_description, 
    p_category.sort as p_category_sort, p_category.`level` as `p_category_level`
  </sql>
  <select id="selectByExample" parameterType="com.commune.paris.entity.PCategoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from p_category p_category
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from p_category p_category
    where p_category.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from p_category
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.commune.paris.entity.PCategoryExample">
    delete from p_category p_category
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.commune.paris.entity.PCategory">
    insert into p_category (id, parent_id, `name`, 
      `status`, description, sort, 
      `level`)
    values (#{id,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}, 
      #{level,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.commune.paris.entity.PCategory" useGeneratedKeys="true" keyProperty="id">
    insert into p_category
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="level != null">
        `level`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.commune.paris.entity.PCategoryExample" resultType="java.lang.Long">
    select count(*) from p_category p_category
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update p_category p_category
    <set>
      <if test="record.id != null">
        p_category.id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.parentId != null">
        p_category.parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        p_category.`name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        p_category.`status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        p_category.description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null">
        p_category.sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.level != null">
        p_category.`level` = #{record.level,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update p_category p_category
    set p_category.id = #{record.id,jdbcType=INTEGER},
      p_category.parent_id = #{record.parentId,jdbcType=INTEGER},
      p_category.`name` = #{record.name,jdbcType=VARCHAR},
      p_category.`status` = #{record.status,jdbcType=INTEGER},
      p_category.description = #{record.description,jdbcType=VARCHAR},
      p_category.sort = #{record.sort,jdbcType=INTEGER},
      p_category.`level` = #{record.level,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.commune.paris.entity.PCategory">
    update p_category
    <set>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        `level` = #{level,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.commune.paris.entity.PCategory">
    update p_category
    set parent_id = #{parentId,jdbcType=INTEGER},
      `name` = #{name,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      `level` = #{level,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>